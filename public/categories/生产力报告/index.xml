<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>生产力报告 on 極客死亡計劃</title><link>https://geedea.pro/categories/%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8A%A5%E5%91%8A/</link><description>Recent content in 生产力报告 on 極客死亡計劃</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 07 Nov 2024 00:00:00 +0800</lastBuildDate><atom:link href="https://geedea.pro/categories/%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%8A%A5%E5%91%8A/index.xml" rel="self" type="application/rss+xml"/><item><title>2024 年，我的 RSS 解决方案</title><link>https://geedea.pro/posts/%E6%88%91%E7%9A%84-rss-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link><pubDate>Thu, 07 Nov 2024 00:00:00 +0800</pubDate><guid>https://geedea.pro/posts/%E6%88%91%E7%9A%84-rss-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid><description>以前的工具和系统 之前一直用 Inoreader，但是 iOS 应用无法在国区应用商店安装，我也懒得切换地区，所以之前一直同时使用 Inoreader + Cubox 两个 App 作为阅读工具——在有空的时候，现在网页端筛选一遍想读的文章，然后收藏链接到 Cubox，之后无论在什么地方，都可以很方便地用 Cubox 阅读这些文章。
不过我很快发现，年付 99 人民币的 Cubox Pro 居然是我订阅过的最贵的 App，日均费用是 ￥0.27（除此之外我最贵的订阅是 Apple Music，有大学生优惠之后，一天大概 ￥0.2）。
虽然这看起来不是一笔大开销，但任务管理 App 我都从 ￥99 一年的滴答清单换成 Apple 原生的日历和提醒事项两件套了，「稍后读」这种简单的需求我为什么要花这么多钱？
于是我从 Cubox 换到了 Notion Webclip，还是免费的香啊。
其实在更换工具之前，我就对这种「先用 RSS 阅读器搜罗，然后在稍后读应用里阅读精选的文章」的模式感到暗暗地不爽，换了之后，这种「不舒服」的感觉还是存在。于是我开始思考为什么。
其中很大一部分原因是，「选文章」和「读文章」相比，前者更有吸引力。人在「期待」的过程中会分泌更多的多巴胺，而不是在真正做这件事情的时候，这也是为什么买东西那么爽，但是大多买回来没用几次就闲置了。先选再读的模式也会造成这种问题，一开始以为自己选的都是自己感兴趣的话题，结果放在另一个篮子里之后，就没那么想读了。
解决的思路 既然发现了这个问题，那就想办法解决吧！
很多时候，我们会把解决一个简单需求的系统设计得太复杂，造成了太多的冗余和不便。我的需求只是：订阅我感兴趣的源，然后从中选出我真正感兴趣的内容。很明显，我把「挑选」设置成了一个较大的动作，或者说，我把原本可以一步完成的动作拆成了两步。
在当前的系统中，我的阅读过程是：每天定时打开 RSS 阅读器，选出想要阅读的文章；然后，在有空的时候，阅读这些提前选出的文章。
然而，我本可以在我有空的时间里，一边浏览订阅源的新文章列表，一边略读，跳过不想要阅读的文章，当遇到感兴趣的文章时，就继续读下去。
只是稍微复杂了一点的系统，究竟带来了怎样的问题呢？或许三言两语很难解释清楚，但我可以用结果呈现：现在我的 Webclip（稍后读）中还有 21 篇未读文章，其中有一大半都在 Webclip 里待了超过一周的时间；自从我减少「随手收藏」的习惯之后，两天内仅有一篇文章入库，其他大部分都直接在 RSS 阅读器里读完了，或者是因为不感兴趣而直接丢掉了。
不过，Inoreader 还是用不顺手，之前试过 Feedly 也觉得一般，关键是没有国内能用的客户端。而 iOS 上我能用的 RSS 阅读器，都没有免费的原生全平台同步。
其实我还试过最近爆火的 Follow，但我没有邀请码，而且我也用不着各种花里胡哨的订阅源，把社交媒体也放在 RSS 阅读器里应该会很乱吧……（不过我也不好说，毕竟我没用过）。而且 Follow 也没解决我最大的痛点——我需要 iOS 应用，iPad 的阅读体验跟桌面应用比起来要好太多了。</description></item><item><title>比起记录时间，计算产出或许更有用</title><link>https://geedea.pro/posts/%E6%AF%94%E8%B5%B7%E8%AE%B0%E5%BD%95%E6%97%B6%E9%97%B4-%E8%AE%A1%E7%AE%97%E4%BA%A7%E5%87%BA%E6%88%96%E8%AE%B8%E6%9B%B4%E6%9C%89%E7%94%A8/</link><pubDate>Thu, 10 Oct 2024 00:00:00 +0800</pubDate><guid>https://geedea.pro/posts/%E6%AF%94%E8%B5%B7%E8%AE%B0%E5%BD%95%E6%97%B6%E9%97%B4-%E8%AE%A1%E7%AE%97%E4%BA%A7%E5%87%BA%E6%88%96%E8%AE%B8%E6%9B%B4%E6%9C%89%E7%94%A8/</guid><description>谈到效率工具，除了老生常谈的各大笔记软件，如 Notion、Obsidian、Logseq、Bear、Evernote 等等，也离不开时间管理工具。
谈到时间管理，又不得不分成三个话题来讨论——日程管理、任务管理、时间记录。这三个话题对应的工具分别是日历、清单（to-do list）和各种各样的时间记录 App。
简单来说，日程管理要管理的是诸如开会、上课、赴约等，需要个人在指定时间，到达指定地点，参加指定活动的事项。任务管理要管理的是任何需要做的事情，这件事情没有强制的时间和地点限制，并且往往为我们所控；有时，任务管理还需要处理更复杂的大任务和小任务（或者说，项目和子任务）的关系。
日程和任务的边界其实比较模糊，所以像「滴答清单」这样的应用，就直接把日历和清单做到了一起，任务和日程是互通的，甚至笔记也能和任务相互转化。不过，这就不是本文要讨论的内容了。
本文要讨论的是，和日程管理以及任务管理相比，看起来没那么重要，讨论度也更低的「时间记录」，以及它到底有没有用。
第一章：我把时间都花在哪了？ 什么是「时间记录」？ 简而言之，「时间记录」就是追踪你每天花费在不同类型的事物上的时间。
不同的用户可能会有不同的需求和用法。重度使用者可能会记录每天 24 小时的时间花费，包括睡觉时间、运动时间、工作时间、学习时间等等。他们往往根据需求，把时间分为几类，用相应的标签进行记录。
比如，一个大学生可能会想要记录自己每天花在不同课程上的学习时间，他就会设置「计算机网络」「数据库原理及应用」「马克思主义基本原理」等标签，而这些标签都归属为「学业」这一个类别。
如果你使用过「番茄钟」或者「专注时间」类型的 App，又或者是你使用的时间管理工具里自带了类似的功能（这似乎已经变成效率软件的标配了），那么，这个 App 大概率会帮你记录每天的专注时间。
这也是一种「时间记录」，比起前一种看似有些硬核的方法，这种只记录专注时间的方法或许更适合大多数人。
不过，虽然叫做「时间记录」，但它的意义远不止「记录」。实际上，大部分的数据记录都是为了为之后的数据分析提供样本。也就是说，好的「时间记录」应该能让我们观察到自己在不同维度（每天、每周、每月……）的时间花费，以及不同领域（生活、学习、工作……）的时间花费，还有这些数据反映出来的趋势等等。
这就引出了下一个问题。
「时间记录」是为了什么？ 正如前文所说，这其实是一个产生数据的过程。我之前在《产生数据不等于创造价值》这篇文章里提到，要认清自己的真实需求和动机，记录对自己有价值的数据，不要干吃力不讨好的事情。
就我来说，我每天要干的事情不少，除了日常生活和学校的课程，我还有在校外的兼职、读书、做自己的项目、写小说、管理网站，以及写博客。我认为自己很难平衡好这些事情，很有可能在某一件事情上花费太多时间，这时，记录我自己在不同领域分别投入了多少时间，就有很大的参考价值。
比如，我的课程大多集中在周二和周三，这两天我花费在学业上的时间是最多的，我就可以在其他时候，把时间多分一些给其他领域。
我在《搭建更适合自己的习惯打卡系统》里提到，习惯打卡的分数能反映我当天的精神状态。如果结合时间记录和习惯打卡的数据来看，我就能更好地分析做什么会让我状态变好，什么会让我状态变差。比如，我发现在「学业」上花费的时间超过某个阈值时（比如一整天都在上课的时候），我的状态就会就会一落千丈；如果我在「娱乐」上花费的时间过多，也会出现类似的情况——当我注意到数据反映出来的事实，我就可以进一步分析原因——可能是因为娱乐时产生了大量的多巴胺，这让我在做其他事情的时候变得相对来说没那么有精神，不太能坚持。
我还可以根据我在不同领域投入的时间，绘制一个表示「领域投入度」的饼图，然后，我就可以非常直观地根据这些领域的重要性，来调整我的时间分配。比如，如果我观察到我在兼职上花费了太多的时间，我或许就得考虑辞掉工作或者换一份工作了。
此外，我也可以根据「领域投入度」来重新认识不同领域的重要性。比如，要是我之前一直认为读书没那么重要，但在某一天，我观察到，当我的读书时间呈现上升趋势时，我的博客文章产出，或者其他我认为重要的数据，也跟着上升时，我就要重新思考读书的重要性了。
「时间记录」方法一览 读过一些有关「时间记录」的文章，在 App Store 上也搜索、试用过一些相关的应用，总结下来，时间记录大概有以下几个方法：
时间块 番茄钟 / 专注时钟 项目驱动 时间块记录法 以 aTimeLogger、CalFlow、JotDay 为例，这些时间记录 App 就属于此类。
这种方法将一天 24 小时分为多个时间块，例如每 5 分钟分一个块，用不同颜色的块表示花费在不同类别的事情中的时间，有的还会用颜色的深浅来表示在这个块的时间利用率（要是在这 5 分钟里只有 1 分钟在做事，这个颜色就会浅一些）。
一天过去，这些块基本上就会被填满，你就能从不同颜色的块的数量和分布情况，直观地看到自己都把时间花在哪些事情上了。就算有没填满的，你也可以通过空格子的数量算出自己的时间利用率，因为原则上，空的时间块就说明这段时间里自己在无所事事。
不少好用的时间块 App 会同步手机的睡眠和运动记录（至少 iOS 的应用大部分都支持），实现自动记录。有的还支持应用跟踪，会记录你使用各个 App 的时间。如果你一般使用 Bilibili 来刷视频，用 Logseq 来做学习笔记，追踪这些 App 的使用时间，实际上也追踪了你的娱乐和学习时间。
时间块记录法往往要求你事无巨细地记录时间花费，就连吃饭的时间也得记录，尽管大部分 App 能做到一定程度的自动化，但对于大部分人来说，或许还是有些麻烦。</description></item><item><title>用一张表格控制你的物欲</title><link>https://geedea.pro/posts/%E7%94%A8%E4%B8%80%E5%BC%A0%E8%A1%A8%E6%A0%BC%E6%8E%A7%E5%88%B6%E4%BD%A0%E7%9A%84%E7%89%A9%E6%AC%B2/</link><pubDate>Sat, 05 Oct 2024 00:00:00 +0800</pubDate><guid>https://geedea.pro/posts/%E7%94%A8%E4%B8%80%E5%BC%A0%E8%A1%A8%E6%A0%BC%E6%8E%A7%E5%88%B6%E4%BD%A0%E7%9A%84%E7%89%A9%E6%AC%B2/</guid><description>一到换季，我就觉得自己衣柜里缺几件衣服，现有的颜色、款式都不太让人满意。不只是换季，我似乎总是能找到各种原因添置新东西，这些东西不算奢侈品，也不能算无用，更算不上贵，盆栽、新伞、新的充电宝、价格划算的小装饰、几本书……
有的消费还会产生连锁反应，比如我买了手冲咖啡套装之后，就开始每个月买各种不同的咖啡豆。虽然没有吃灰，但总归是比之前花得多了。买了香薰机之后就会开始尝试各种味道的香薰精油，买了扩香石之后觉得一个颜色的水晶太单调，买了灯之后觉得另一个地方暗了，也要买新的灯。
我总是因为各种不大不小的原因买东西，买了之后，我的物欲只增不减。我试图在每次买东西之前说服自己不要买，这确实有一些作用，但渐渐地，我发现这种没有来头的自我劝说，只会让自己买不了真正需要的东西，而不会阻止我买没用的东西。
比如，我在买了一条裤子之后，发现说明书上写这条裤子不能直接机洗，如果不想手洗就要买洗衣袋。我意识到这又是一条消费的连锁反应，所以我对自己说不，即使十几块钱的洗衣袋能省下我每星期超过半个小时的时间。
而在另一边，作为一个脑回路不太正常的人类，我因为在外面和朋友逛街逛得开心，花 18 块钱买了一副 12 寸的扑克牌（因为一想到自己要「耍大牌」了就觉得很好玩）。
解决问题的思想 显然，面对众多的、不稳定的、难以控制的物欲，我必须在理智不能时刻在线的情况下，让自己尽可能做出更多理性的购物选择——我必须把在当前时间段所拥有的金钱，花在真正该花的事情上。
我需要另一个东西帮助我思考，让我在任何时候都能根据它，做出尽可能理智的决定，也就是说，我需要一个「系统」。
最近在读《算法之美》（Algorithms to Live by），虽然我还没遇到可以用书中提供的问题和思考模型解决的实际问题，但利用计算机科学的思想，辅助人做出决策的想法，真的对我很有启发。
那么，现在我们试着用「系统」的思想来解决遇到的这个问题。要应用这样的思想，我们要明确三个要素：目的、输入和输出。
分析目的：我希望达到什么样的效果？ 前面已经分析过了，我的目的是让我合理地分配当前时间下可以支配的金钱。不过这个「合理」要怎样定义呢？
简单来说，我希望我不会阻止自己买真正需要的东西，也不能完全否定自己买无用之物的行为。
比如前面提到的洗衣袋，我真的需要它，并且我真的想要保护好自己喜欢的那条裤子。这种我既想要又需要的东西，当然要优先购买。而那个大号扑克牌，虽然不需要，但它能给我提供情绪价值，当然可以买，不过照理来说，应该要排在洗衣袋的后面。
这样想就很明白了，这是一个排序的问题。不过很遗憾，我并不能用计算机的冒泡排序或者归并排序算法来解决，因为待排序项没有一个明确的「键值」。
但我们现在已经很接近了，我们已经知道，要解决如何买东西的这个问题，只需要知道什么优先买，什么最后买就可以了。
当然，有些东西实在是没必要买，所以也要有办法评估什么样的东西没有购买价值。不过这和前面的排序实际上可以一同解决，比如排在最后 20% 的东西就不买。
明确输入：我可以利用的信息有哪些？ 现在我们已经知道，我们要做的事情是给这些待购买物品进行「排序」，事情就简单很多了。
不过，就像我在前面提到的，这实际上并不是一个排序问题，因为在计算机科学中，排序需要一个索引，或者键值之类的东西作为依据。如果我们根据购买的必要性给所有要购买的物品编号，越有购买价值的物品，这个编号就越大。那么，我们就可以给这些物品「降序排序」，购买价值最高的物品就排在最前面，最优先购买，相反，最没有购买价值的就在最后面。
现在，这个问题就变成了，怎样计算一件物品的「购买价值」呢？
回顾一下我们的目的：我希望自己在能保证自己能买到自己需要的物品时，也能在一个合理的范围内，买到自己想要的东西。从中提取两个关键词——「需要」和「想要」。这两个词就可以是我们计算「购买价值」的依据。
如果是 100% 需要的东西，就算是 0 分的想要，也要购买。如果是 50% 想要的、50% 需要的东西，自然也可以买。那如果是 100% 想要，但是一点也不需要的呢？
此时，可以引入另一个因素帮助我们做决定——预估价格。
如果一个东西我们特别想要，但是一点也不需要，例如大号的扑克牌，该不该买呢？显然，如果这个东西很便宜，只要十几块钱，那买来玩一玩为何不可？但如果这样的东西要花 300 多块钱，购买的价值就相对较低了。
现在，我们就基本确定了这个「系统」的输入了：需要、想要和价格。
当然，价格很容易计算，毕竟它是明确的数字。不过「需要」和「想要」比较抽象，似乎塞不进一个公式里。要解决这个问题，我们可以凭直觉估计一个数字：提前确定一个范围，比如 0~5，然后凭自己的直觉，分别给自己有多想要和有多需要打个分。
这似乎听起来不太严谨，但你还能有什么选择呢？而且，这毕竟是给自己用的，凭直觉得出的结果足够了。
得到输出：设计一个合适的算法吧！ 现在我们知道了自己有多想要、多需要一件物品，还知道这件物品大概的价格是多少，我们就可以开始计算这个物品的购买价值了。
首先，根据你的自身情况，决定「想要」和「需要」各占几成。我的选择是，「想要」占三成，「需要」占七成。于是，我给「想要」打的 0~5 的分数，到最后只会按照 30% 几分，「需要」分数则会按照 70% 计分。
其次，「价格」明显是个减分项。价格越高，这个产品的购买价值也就越低。所以，要从「想要」和「需要」的 0~5 分中，减去一个由「价格」决定的数字。
显然，我们不能直接用价格本身减去那个 05 的分数，这两个数字根本不是一个量级的。如果把「想要」和「需要」分数的上限拔高到和价格类似，也就是取 0100000 的范围，又不如 05 方便。而且，一般我们购买的物品，价格都有很明显的断层，而且分布也不均匀——我们想买的东西，可能 50200 区间内的更多，其次就是 2000~5000 的数码产品，在往上，可能就是一台 10000 左右的 MacBook 了。当然，每个人的情况略有不同，但平均分布的情况肯定是极少的。</description></item><item><title>搭建更适合自己的习惯打卡系统</title><link>https://geedea.pro/posts/%E6%90%AD%E5%BB%BA%E6%9B%B4%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B9%A0%E6%83%AF%E6%89%93%E5%8D%A1%E7%B3%BB%E7%BB%9F/</link><pubDate>Tue, 01 Oct 2024 00:00:00 +0800</pubDate><guid>https://geedea.pro/posts/%E6%90%AD%E5%BB%BA%E6%9B%B4%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B9%A0%E6%83%AF%E6%89%93%E5%8D%A1%E7%B3%BB%E7%BB%9F/</guid><description>我一直认为 Notion 比起一款笔记软件、普通的协作工具，更像一个低代码平台——你不需要自己编写和构建程序，可以自由地使用 Notion 的功能和特性，设计满足自己需求的应用。
因此，尽管我不用 Notion 做知识管理，我的日常生活也不离开 Notion。我的任务管理、项目管理、习惯追踪、理财系统，都使用 Notion 来完成，除此之外，还有一些不大不小的需求，例如便于集中管理的互联网收藏夹（我几乎不再使用 Bilibili 等应用自带的收藏夹了）和一些零碎的收集——收集其他人给我的赞美，以便我心情低落时浏览；我还会收集一些创作灵感，未来的某个时候或许可以拼凑成完整的作品。
大多数需求的满足，都得益于 Notion 强大的数据库功能。它没有用于生产环境的专业关系型数据库那样复杂，在易用的同时，也保证了基本、自由的数据维护和数据处理功能，能满足个人使用者几乎所有的数据管理需求。
在「我怎样用 Notion」这个系列中，我会介绍我使用 Notion 打造的各种系统，包括我为什么需要这个系统、什么样的人有这样的需求、我为什么这样设计，以及读者可以怎样搭建这个系统。
如果你感兴趣的话，就请继续读下去吧。在这篇文章，我会介绍我经过多次迭代后确定的、我目前正在使用的习惯打卡系统。
什么是习惯打卡？ 习惯打卡，在英文互联网上一般被称作 Habit Tracker（习惯追踪），是一种帮自己养成健康习惯和良好作息的自律方法。
有的人会写日记追踪习惯。我见过一个 YouTuber 用方格的手账本写日记，他在每页纸的右侧留下了几列用作简单的习惯追踪系统。比如，他规定第一列是运动打卡，第二列是咖啡因记录，第三列是睡眠记录。如果在某一天，他运动了 30 分钟，喝了 250ml 咖啡，也就是大约 100mg 咖啡因，并且他在 11 点之前上床睡觉了。
在这一天对应的记录里，他就可以把第一列的那一格涂黑，因为他完成了运动目标。他会在第二格打一把叉，因为他规定的咖啡因上限是 72mg，他没能在今天达成目标。最后，他在第三格也打上了对应的记号。
如果这样坚持记录一周、一个月、一年，他就能在自己的日记本上，较为直观地看到自己的习惯完成情况。
如果你更喜欢纸笔，并且只是把记录打卡当作激励自己的一种方式，这种方法已经足够。如果你和我一样认为这样呈现出来的数据不够直观，也不能起到很好的提醒作用，或者，你想要尝试一些新东西，请继续读下去。
我需要怎样的习惯打卡系统？ 不要做假账 《认知觉醒》的作者说“打卡打不出未来”，是因为打卡是手段而非目的。如果以打卡为目的，就会出现我在《别再烦我了，绿色猫头鹰》这篇文章里提到的，为了保持连胜，每天极不情愿地进行低效的学习。不仅没有效果，还影响自己的心情。
所以，打卡不是罪魁祸首，错误的心态才是。
实际上，不是所有的习惯都需要每天进行。如果我刚结束了忙碌的一天，回到自己的窝里想好好休息一下，这时打开电脑，发现今天还有四个习惯没有打卡，我会怎样想？
如果我焦急地把清单上的任务都完成，在一天剩下的两个小时里读了 15 分钟书、下楼跑了 2 公里、脑袋空空地写了日记，最后焦急地进行了一次冥想练习（这是个悖论，你当然没法焦急地冥想），我当然能完成自己定下的目标，但这真的有用吗？
除了两公里是实实在在地跑完了，其他的事项又产生了怎样的效果？
如果仔细想想，公众演讲也是一件对自己有意义的事情，经常上台能锻炼自己的表达能力、台风和勇气，能算做好习惯。但这样的好习惯需要每天做吗？再者，你真的有精力每天在一群人面前讲话吗？
运动、读书、冥想，这些事情看起来比公众演讲轻松很多，但也不代表就一定要每天做，保持在一个合理的频率即可。比如，我当然希望我能每天读书，但事实上，我每周二都是满课，上完学校的课就没精力读其他书了，其他课少的日子，我当然很愿意读书——这么看的话，我就可以督促自己在能读书的时刻就尽可能读，一周可以有两天不读，也就是约 71%（5÷7）的天数里，我需要完成读书的打卡。
这样一来，我打卡的压力就减轻了，可以读的时候就更愿意读，也就更不容易出现翻几页就算打卡了的这种自欺欺人的情况。
建立好习惯和减少坏习惯 当然，在形成好习惯的同时也要避免坏习惯。如果在设计习惯打卡系统的时候，把两者都考虑进来，就能发现好习惯打卡和坏习惯打卡可以用于建立一套反馈闭环。
挪用计算机中常见的「权重」的概念，正数表示好习惯，负数表示坏习惯；数字越大表示习惯带来的价值越大，数字越小表示习惯带来的价值越小。例如，吃水果是一个好习惯，权值（权重的取值）是 1，而阅读显然是一个比吃水果更难完成、收益更大的习惯，权值是 2；吃零食是一个坏习惯，权值就可以设置为 -1。
如果把当天打卡的所有习惯的权值相加，就可以得到一个分数，暂且称作「习惯分数」。用人话来讲，打卡一个好习惯会加分，打卡一个坏习惯会扣分，根据权重的不同，加分和扣分的具体数字有差异。
我们可以给自己设置一个理想的「习惯分数」，当今天打卡的习惯的权值和超过这个数字时，就可以停下了，或者打卡一个坏习惯奖励一下自己。反过来，当今天的分数低于理想值时，就可以告诉自己要加把劲了。
在《The Hacker&amp;rsquo;s Diet》里，John Walker 用这种方法减肥。他用工程学（engineering）的思想，把这样的系统称作负反馈系统（negative feedback system）——当分数超过阈值时，发送停止信号；当分数低于阈值时，发送加速信号。</description></item></channel></rss>